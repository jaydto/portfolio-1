version: 2.1

orbs:
  node: circleci/node@5.0.2
  aws-s3: circleci/aws-s3@3.0.0
  aws-cloudfront: topmonks/aws-cloudfront@1.0.0

description: >
  Installs AWS CLI, uploads files to S3, and invalidates CloudFront cache. All
  steps are run with CircleCI.

parameters:
  aws_user:
    type: string
    default: env_var_name
  aws_password:
    type: string
    default: env_var_name
  aws_region:
    type: string
    default: env_var_name
  s3_portfolio_bucket:
    type: string
    default: env_var_name
  cloud_distribution_id:
    type: string
    description: The distribution's id.
    default: env_var_name 
  path:
    type: string
    description: The space-separated paths to be invalidated.
    default: env_var_name 

workflows:
  version: 2
  
  build_and_deploy:
    jobs:
      - build:
          context: portfolio
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main

jobs:
  build:
    docker:
      - image: cimg/base:stable  # Adjust the base image accordingly

    executor:
      name: node/default

    steps:
      - checkout

      # Use Node.js orb to install Node.js and npm
      - node/install

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package-lock.json" }}
          - v1-dependencies-

      
      # Install dependencies
      - run:
          name: Install Dependencies
          command: npm install
      
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

      - run:
          name: Ensure Build Directory
          command: mkdir -p build
    
      - run:
          name: Build
          command: |
            if [ $CIRCLE_BRANCH = 'main' ]; then
              npm run build
            fi


      - run:
          name: List Files in Build Directory
          command: ls -R build

      - run:
          name: List Files in Build Directory Now
          command: |
            echo "List of files in the build directory:"
            find build -type f
            echo "List of directories in the build directory:"
            find build -type d


      - persist_to_workspace:
          root: ./
          paths:
            - build  # Only persist the 'build' directory
          

  deploy:
    docker:
      - image: cimg/base:stable  

    

    executor:
      name: node/default

    steps:
      - checkout
      - attach_workspace:
          at: ./


      # List the persisted files in the 'build' directory
      - run:
          name: List Persisted Files in Build Directory
          command: |
            echo "List of files in the persisted 'build' directory:"
            ls -R ./
      # Use AWS S3 orb to sync build files to S3 bucket
      - aws-s3/sync:
          from: ./build
          to: s3://portfolio-jayd
          aws-access-key-id: aws_user
          aws-secret-access-key: aws_password
          aws-region: aws_region

      # Use AWS CloudFront orb to invalidate cache
      - run:
          name: Invalidate Cloudfront distribution cloud_distribution_id
          command: >
            aws cloudfront create-invalidation --distribution-id=<<
            parameters.cloud_distribution_id >> --paths=<< parameters.path >>
